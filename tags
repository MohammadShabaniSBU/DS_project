!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/mohammad/Code/java/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
21feyNySZm1GYE1bUdfMedYQeEY	.idea/workspace.xml	/^  <component name="ProjectId" id="21feyNySZm1GYE1bUdfMedYQeEY" \/>$/;"	i
ActionAbstract	src/Actions/ActionAbstract.java	/^    public ActionAbstract() {$/;"	m	class:ActionAbstract
ActionAbstract	src/Actions/ActionAbstract.java	/^public abstract class ActionAbstract implements ActionInterface {$/;"	c
ActionInterface	src/Interfaces/ActionInterface.java	/^public interface ActionInterface {$/;"	i
Actions	src/Actions/ActionAbstract.java	/^package Actions;$/;"	p
Actions	src/Actions/AddBank.java	/^package Actions;$/;"	p
Actions	src/Actions/AddBankRev.java	/^package Actions;$/;"	p
Actions	src/Actions/AddBranch.java	/^package Actions;$/;"	p
Actions	src/Actions/AddBranchRev.java	/^package Actions;$/;"	p
Actions	src/Actions/AddState.java	/^package Actions;$/;"	p
Actions	src/Actions/AddStateRev.java	/^package Actions;$/;"	p
Actions	src/Actions/AviabelesBanks.java	/^package Actions;$/;"	p
Actions	src/Actions/DeleteBranch.java	/^package Actions;$/;"	p
Actions	src/Actions/DeleteBranchRev.java	/^package Actions;$/;"	p
Actions	src/Actions/ListBanksInState.java	/^package Actions;$/;"	p
Actions	src/Actions/ListBranches.java	/^package Actions;$/;"	p
Actions	src/Actions/NearestBank.java	/^package Actions;$/;"	p
Actions	src/Actions/NearestBranch.java	/^package Actions;$/;"	p
Actions	src/Actions/Undo.java	/^package Actions;$/;"	p
AddBank	src/Actions/AddBank.java	/^public class AddBank extends ActionAbstract {$/;"	c
AddBankRev	src/Actions/AddBankRev.java	/^    public AddBankRev(MainBank mainBank) {$/;"	m	class:AddBankRev
AddBankRev	src/Actions/AddBankRev.java	/^public class AddBankRev implements ActionInterface {$/;"	c
AddBranch	src/Actions/AddBranch.java	/^public class AddBranch extends ActionAbstract {$/;"	c
AddBranchRev	src/Actions/AddBranchRev.java	/^    public AddBranchRev(Branch branch) {$/;"	m	class:AddBranchRev
AddBranchRev	src/Actions/AddBranchRev.java	/^public class AddBranchRev implements ActionInterface {$/;"	c
AddState	src/Actions/AddState.java	/^public class AddState extends ActionAbstract {$/;"	c
AddStateRev	src/Actions/AddStateRev.java	/^    public AddStateRev(State state) {$/;"	m	class:AddStateRev
AddStateRev	src/Actions/AddStateRev.java	/^public class AddStateRev implements ActionInterface {$/;"	c
ArrayList	src/ArrayList/ArrayList.java	/^    public ArrayList(FactoryInterface<T> builder) {$/;"	m	class:ArrayList
ArrayList	src/ArrayList/ArrayList.java	/^package ArrayList;$/;"	p
ArrayList	src/ArrayList/ArrayList.java	/^public class ArrayList<T extends NodeInterface<T>> {$/;"	c
AviabelesBanks	src/Actions/AviabelesBanks.java	/^public class AviabelesBanks extends ActionAbstract {$/;"	c
Bank	src/Bank/Bank.java	/^    public Bank(String name, int[] coordination) {$/;"	m	class:Bank
Bank	src/Bank/Bank.java	/^package Bank;$/;"	p
Bank	src/Bank/Bank.java	/^public abstract class Bank {$/;"	c
Bank	src/Bank/Branch.java	/^package Bank;$/;"	p
Bank	src/Bank/MainBank.java	/^package Bank;$/;"	p
Bootstrap	src/Core/Bootstrap.java	/^public class Bootstrap {$/;"	c
Branch	src/Bank/Branch.java	/^    public Branch(String name, int[] cordination) {$/;"	m	class:Branch
Branch	src/Bank/Branch.java	/^public class Branch extends Bank {$/;"	c
Commands	src/Core/Commands.java	/^    public Commands() {$/;"	m	class:Commands
Commands	src/Core/Commands.java	/^public class Commands {$/;"	c
Container	src/Core/Container.java	/^    private Container() {}$/;"	m	class:Container	file:
Container	src/Core/Container.java	/^public class Container {$/;"	c
Core	src/Core/Bootstrap.java	/^package Core;$/;"	p
Core	src/Core/Commands.java	/^package Core;$/;"	p
Core	src/Core/Container.java	/^package Core;$/;"	p
Core	src/Core/Luncher.java	/^package Core;$/;"	p
Default	.idea/workspace.xml	/^    <task active="true" id="Default" summary="Default task">$/;"	i
DeleteBranch	src/Actions/DeleteBranch.java	/^public class DeleteBranch extends ActionAbstract {$/;"	c
DeleteBranchRev	src/Actions/DeleteBranchRev.java	/^    public DeleteBranchRev(Branch branch) {$/;"	m	class:DeleteBranchRev
DeleteBranchRev	src/Actions/DeleteBranchRev.java	/^public class DeleteBranchRev implements ActionInterface {$/;"	c
Factory	src/Factory/KNodeFactory.java	/^package Factory;$/;"	p
Factory	src/Factory/TNodeFactory.java	/^package Factory;$/;"	p
FactoryInterface	src/Interfaces/FactoryInterface.java	/^public interface FactoryInterface<T> {$/;"	i
Interfaces	src/Interfaces/ActionInterface.java	/^package Interfaces;$/;"	p
Interfaces	src/Interfaces/FactoryInterface.java	/^package Interfaces;$/;"	p
Interfaces	src/Interfaces/NodeInterface.java	/^package Interfaces;$/;"	p
KDTree	src/KDTree/KDTree.java	/^package KDTree;$/;"	p
KDTree	src/KDTree/KDTree.java	/^public class KDTree<T> {$/;"	c
KDTree	src/KDTree/Node.java	/^package KDTree;$/;"	p
KNodeFactory	src/Factory/KNodeFactory.java	/^public class KNodeFactory<T> implements FactoryInterface<Node<T>> {$/;"	c
ListBanksInState	src/Actions/ListBanksInState.java	/^public class ListBanksInState extends ActionAbstract {$/;"	c
ListBranches	src/Actions/ListBranches.java	/^public class ListBranches extends ActionAbstract {$/;"	c
Luncher	src/Core/Luncher.java	/^public class Luncher {$/;"	c
Main	src/Main.java	/^public class Main {$/;"	c
MainBank	src/Bank/MainBank.java	/^    public MainBank(String name, int[] cordination) {$/;"	m	class:MainBank
MainBank	src/Bank/MainBank.java	/^public class MainBank extends Bank {$/;"	c
NearestBank	src/Actions/NearestBank.java	/^public class NearestBank extends ActionAbstract {$/;"	c
NearestBranch	src/Actions/NearestBranch.java	/^public class NearestBranch extends ActionAbstract {$/;"	c
Node	src/KDTree/Node.java	/^    public Node(T value, int[] coordination) {$/;"	m	class:Node
Node	src/KDTree/Node.java	/^public class Node<T> implements NodeInterface<Node<T>> {$/;"	c
Node	src/Stack/Node.java	/^    public Node(T value) {$/;"	m	class:Node
Node	src/Stack/Node.java	/^public class Node<T> {$/;"	c
Node	src/TrieMap/Node.java	/^    public Node(char ch) {$/;"	m	class:Node
Node	src/TrieMap/Node.java	/^public class Node<T> implements NodeInterface<Node<T>> {$/;"	c
NodeInterface	src/Interfaces/NodeInterface.java	/^public interface NodeInterface<T> {$/;"	i
Stack	src/Stack/Node.java	/^package Stack;$/;"	p
Stack	src/Stack/Stack.java	/^    public Stack() {$/;"	m	class:Stack
Stack	src/Stack/Stack.java	/^package Stack;$/;"	p
Stack	src/Stack/Stack.java	/^public class Stack<T> {$/;"	c
State	src/State/State.java	/^    public State(String name, int[] downLeft, int[] upRight) {$/;"	m	class:State
State	src/State/State.java	/^package State;$/;"	p
State	src/State/State.java	/^public class State {$/;"	c
TNodeFactory	src/Factory/TNodeFactory.java	/^public class TNodeFactory<T> implements FactoryInterface<Node<T>> {$/;"	c
TrieMap	src/TrieMap/Node.java	/^package TrieMap;$/;"	p
TrieMap	src/TrieMap/TrieMap.java	/^    public TrieMap() {$/;"	m	class:TrieMap
TrieMap	src/TrieMap/TrieMap.java	/^package TrieMap;$/;"	p
TrieMap	src/TrieMap/TrieMap.java	/^public class TrieMap<T> {$/;"	c
Undo	src/Actions/Undo.java	/^public class Undo extends ActionAbstract {$/;"	c
addBranch	src/Bank/MainBank.java	/^    public void addBranch(Bank branch) throws Exception {$/;"	m	class:MainBank
addCapacity	src/ArrayList/ArrayList.java	/^    protected void addCapacity() {$/;"	m	class:ArrayList
app	src/Actions/ActionAbstract.java	/^    protected Container app;$/;"	f	class:ActionAbstract
before	src/Stack/Node.java	/^    private Node<T> before;$/;"	f	class:Node	file:
bind	src/Core/Container.java	/^    public void bind(String key, Object service) {$/;"	m	class:Container
branch	src/Actions/AddBranchRev.java	/^    private Branch branch;$/;"	f	class:AddBranchRev	file:
branch	src/Actions/DeleteBranchRev.java	/^    private Branch branch;$/;"	f	class:DeleteBranchRev	file:
branches	src/Bank/MainBank.java	/^    protected KDTree<Bank> branches;$/;"	f	class:MainBank
builder	src/ArrayList/ArrayList.java	/^    private final FactoryInterface<T> builder;$/;"	f	class:ArrayList	file:
c358d7ef-cdfe-4c93-b404-4f02621eb45b	.idea/workspace.xml	/^      <changelist id="c358d7ef-cdfe-4c93-b404-4f02621eb45b" name="Changes" comment="" \/>$/;"	i
c358d7ef-cdfe-4c93-b404-4f02621eb45b	.idea/workspace.xml	/^    <list default="true" id="c358d7ef-cdfe-4c93-b404-4f02621eb45b" name="Changes" comment="" \/>$/;"	i
calcDistance	src/KDTree/KDTree.java	/^    protected int calcDistance(int[] point1, int[] point2) {$/;"	m	class:KDTree
capacity	src/ArrayList/ArrayList.java	/^    private int capacity;$/;"	f	class:ArrayList	file:
ch	src/TrieMap/Node.java	/^    private char ch;$/;"	f	class:Node	file:
children	src/TrieMap/Node.java	/^    private ArrayList<Node<T>> children;$/;"	f	class:Node	file:
commands	src/Core/Commands.java	/^    private TrieMap<ActionInterface> commands;$/;"	f	class:Commands	file:
coordination	src/Bank/Bank.java	/^    protected int[] coordination;$/;"	f	class:Bank
coordination	src/KDTree/Node.java	/^    public int[] coordination;$/;"	f	class:Node
countOfBranches	src/Bank/MainBank.java	/^    public int countOfBranches() {$/;"	m	class:MainBank
countOfKids	src/TrieMap/Node.java	/^    public int countOfKids() {$/;"	m	class:Node
downLeft	src/State/State.java	/^    private final int[] downLeft;$/;"	f	class:State	file:
findMin	src/KDTree/KDTree.java	/^    public Node<T> findMin(Node<T> root, int d) {$/;"	m	class:KDTree
findMinRec	src/KDTree/KDTree.java	/^    public Node<T> findMinRec(Node<T> root, int d, int depth) {$/;"	m	class:KDTree
findNearest	src/KDTree/KDTree.java	/^    public Node<T> findNearest(int[] coordination, Node<T> root, Node<T> nearest, int depth) {$/;"	m	class:KDTree
findNodesIn	src/KDTree/KDTree.java	/^    protected void findNodesIn(Node<T> root, int depth, int[] downLeft, int[] upRight, ArrayList/;"	m	class:KDTree
findWithCoordination	src/KDTree/KDTree.java	/^    public T findWithCoordination(int[] coordination) {$/;"	m	class:KDTree
findWithCoordinationRec	src/KDTree/KDTree.java	/^    public T findWithCoordinationRec(int[] coordination, Node<T> root, int depth) {$/;"	m	class:KDTree
get	src/TrieMap/TrieMap.java	/^    public T get(String key) {$/;"	m	class:TrieMap
getArrayObject	src/Factory/KNodeFactory.java	/^    public Node<T>[] getArrayObject(int size) {$/;"	m	class:KNodeFactory
getArrayObject	src/Factory/TNodeFactory.java	/^    public Node<T>[] getArrayObject(int size) {$/;"	m	class:TNodeFactory
getArrayObject	src/Interfaces/FactoryInterface.java	/^    public T[] getArrayObject(int size);$/;"	m	interface:FactoryInterface
getBanksInRadius	src/KDTree/KDTree.java	/^    public ArrayList<Node<T>> getBanksInRadius(int[] center, int radius) {$/;"	m	class:KDTree
getBanksInRadiusRec	src/KDTree/KDTree.java	/^    protected void getBanksInRadiusRec(int[] center,$/;"	m	class:KDTree
getBefore	src/Stack/Node.java	/^    public Node<T> getBefore() {$/;"	m	class:Node
getBranches	src/Bank/MainBank.java	/^    public KDTree<Bank> getBranches() {$/;"	m	class:MainBank
getByNode	src/ArrayList/ArrayList.java	/^    public T getByNode(T val) {$/;"	m	class:ArrayList
getCh	src/TrieMap/Node.java	/^    public char getCh() {$/;"	m	class:Node
getCoordination	src/Bank/Bank.java	/^    public int[] getCoordination() {$/;"	m	class:Bank
getCoordination	src/KDTree/Node.java	/^    public int[] getCoordination() {$/;"	m	class:Node
getDownLeft	src/State/State.java	/^    public int[] getDownLeft() {$/;"	m	class:State
getInstance	src/Core/Container.java	/^    public static Container getInstance() {$/;"	m	class:Container
getKidWithChar	src/TrieMap/Node.java	/^    public Node<T> getKidWithChar(char ch) {$/;"	m	class:Node
getMainBank	src/Bank/Branch.java	/^    public MainBank getMainBank() {$/;"	m	class:Branch
getName	src/Bank/Bank.java	/^    public String getName() {$/;"	m	class:Bank
getName	src/State/State.java	/^    public String getName() {$/;"	m	class:State
getNearest	src/KDTree/KDTree.java	/^    public T getNearest(int[] coordination) {$/;"	m	class:KDTree
getNodesIn	src/KDTree/KDTree.java	/^    public ArrayList<Node<T>> getNodesIn(int[] downLeft, int[] upRight) {$/;"	m	class:KDTree
getObject	src/Factory/KNodeFactory.java	/^    public Node<T> getObject() {$/;"	m	class:KNodeFactory
getObject	src/Factory/TNodeFactory.java	/^    public Node<T> getObject() {$/;"	m	class:TNodeFactory
getObject	src/Interfaces/FactoryInterface.java	/^    public T getObject();$/;"	m	interface:FactoryInterface
getOrCreateKidWithChar	src/TrieMap/Node.java	/^    public Node<T> getOrCreateKidWithChar(char ch) {$/;"	m	class:Node
getParent	src/TrieMap/Node.java	/^    public Node<T> getParent() {$/;"	m	class:Node
getSize	src/ArrayList/ArrayList.java	/^    public int getSize() {$/;"	m	class:ArrayList
getSize	src/KDTree/KDTree.java	/^    public int getSize() {$/;"	m	class:KDTree
getSize	src/Stack/Stack.java	/^    public int getSize() {$/;"	m	class:Stack
getUpRight	src/State/State.java	/^    public int[] getUpRight() {$/;"	m	class:State
getValue	src/KDTree/Node.java	/^    public T getValue() {$/;"	m	class:Node
getValue	src/Stack/Node.java	/^    public T getValue() {$/;"	m	class:Node
getValue	src/TrieMap/Node.java	/^    public T getValue() {$/;"	m	class:Node
id	src/Bank/Bank.java	/^    protected int id;$/;"	f	class:Bank
init	src/Core/Bootstrap.java	/^    public static void init() {$/;"	m	class:Bootstrap
insert	src/ArrayList/ArrayList.java	/^    public void insert(T value) {$/;"	m	class:ArrayList
insert	src/KDTree/KDTree.java	/^    public void insert(T value, int[] coordination) throws Exception {$/;"	m	class:KDTree
insert	src/TrieMap/TrieMap.java	/^    public void insert(String key, T value) {$/;"	m	class:TrieMap
insertChild	src/TrieMap/Node.java	/^    public void insertChild(Node<T> val) {$/;"	m	class:Node
insertNode	src/KDTree/KDTree.java	/^    protected Node<T> insertNode(Node<T> root, Node<T> node, int depth) throws Exception {$/;"	m	class:KDTree
instance	src/Core/Container.java	/^    private static Container instance = null;$/;"	f	class:Container	file:
isEqual	src/Interfaces/NodeInterface.java	/^    public boolean isEqual(T compare);$/;"	m	interface:NodeInterface
isEqual	src/KDTree/Node.java	/^    public boolean isEqual(Node<T> compare) {$/;"	m	class:Node
isEqual	src/TrieMap/Node.java	/^    public boolean isEqual(Node<T> compare) {$/;"	m	class:Node
isIn	src/State/State.java	/^    public boolean isIn(int[] point) {$/;"	m	class:State
isLeaf	src/TrieMap/Node.java	/^    private boolean isLeaf;$/;"	f	class:Node	file:
isLeaf	src/TrieMap/Node.java	/^    public boolean isLeaf() {$/;"	m	class:Node
last	src/Stack/Stack.java	/^    private Node<T> last;$/;"	f	class:Stack	file:
left	src/KDTree/Node.java	/^    public Node<T> left;$/;"	f	class:Node
lunchApp	src/Core/Luncher.java	/^    public static void lunchApp() {$/;"	m	class:Luncher
main	src/Main.java	/^    public static void main(String[] args) {$/;"	m	class:Main
mainBank	src/Actions/AddBankRev.java	/^    private MainBank mainBank;$/;"	f	class:AddBankRev	file:
mainBank	src/Bank/Branch.java	/^    private MainBank mainBank;$/;"	f	class:Branch	file:
minNode	src/KDTree/KDTree.java	/^    public Node<T> minNode(Node<T> x, Node<T> y, Node<T> z, int depth) {$/;"	m	class:KDTree
name	src/Bank/Bank.java	/^    protected String name;$/;"	f	class:Bank
name	src/State/State.java	/^    private final String name;$/;"	f	class:State	file:
parent	src/TrieMap/Node.java	/^    private Node<T> parent;$/;"	f	class:Node	file:
pop	src/Stack/Stack.java	/^    public T pop() {$/;"	m	class:Stack
print	src/ArrayList/ArrayList.java	/^    public void print() {$/;"	m	class:ArrayList
print	src/KDTree/KDTree.java	/^    public void print() {$/;"	m	class:KDTree
printRec	src/KDTree/KDTree.java	/^    protected void printRec(Node<T> node) {$/;"	m	class:KDTree
push	src/Stack/Stack.java	/^    public void push(T value) {$/;"	m	class:Stack
removeNode	src/KDTree/KDTree.java	/^    public void removeNode(int[] coordination) {$/;"	m	class:KDTree
removeNodeRec	src/KDTree/KDTree.java	/^    public Node<T> removeNodeRec(int[] coordination, Node<T> root, int depth) {$/;"	m	class:KDTree
repo	src/ArrayList/ArrayList.java	/^    private T[] repo;$/;"	f	class:ArrayList	file:
repo	src/Core/Container.java	/^    private final TrieMap<Object> repo = new TrieMap<Object>();$/;"	f	class:Container	file:
resolve	src/Core/Commands.java	/^    public void resolve(String key) throws Exception {$/;"	m	class:Commands
resolve	src/Core/Container.java	/^    public Object resolve(String key) {$/;"	m	class:Container
right	src/KDTree/Node.java	/^    public Node<T> right;$/;"	f	class:Node
root	src/KDTree/KDTree.java	/^    private Node<T> root = null;$/;"	f	class:KDTree	file:
root	src/TrieMap/TrieMap.java	/^    private final Node<T> root;$/;"	f	class:TrieMap	file:
run	src/Actions/AddBank.java	/^    public void run() throws Exception {$/;"	m	class:AddBank
run	src/Actions/AddBankRev.java	/^    public void run() {$/;"	m	class:AddBankRev
run	src/Actions/AddBranch.java	/^    public void run() throws Exception {$/;"	m	class:AddBranch
run	src/Actions/AddBranchRev.java	/^    public void run() {$/;"	m	class:AddBranchRev
run	src/Actions/AddState.java	/^    public void run() {$/;"	m	class:AddState
run	src/Actions/AddStateRev.java	/^    public void run() {$/;"	m	class:AddStateRev
run	src/Actions/AviabelesBanks.java	/^    public void run() throws Exception {$/;"	m	class:AviabelesBanks
run	src/Actions/DeleteBranch.java	/^    public void run() throws Exception {$/;"	m	class:DeleteBranch
run	src/Actions/DeleteBranchRev.java	/^    public void run() throws Exception {$/;"	m	class:DeleteBranchRev
run	src/Actions/ListBanksInState.java	/^    public void run() throws Exception {$/;"	m	class:ListBanksInState
run	src/Actions/ListBranches.java	/^    public void run() throws Exception {$/;"	m	class:ListBranches
run	src/Actions/NearestBank.java	/^    public void run() throws Exception {$/;"	m	class:NearestBank
run	src/Actions/NearestBranch.java	/^    public void run() throws Exception {$/;"	m	class:NearestBranch
run	src/Actions/Undo.java	/^    public void run() throws Exception {$/;"	m	class:Undo
run	src/Interfaces/ActionInterface.java	/^    public void run() throws Exception;$/;"	m	interface:ActionInterface
scanner	src/Actions/ActionAbstract.java	/^    protected Scanner scanner;$/;"	f	class:ActionAbstract
setBefore	src/Stack/Node.java	/^    public void setBefore(Node<T> before) {$/;"	m	class:Node
setLeaf	src/TrieMap/Node.java	/^    public void setLeaf(boolean leaf) {$/;"	m	class:Node
setMainBank	src/Bank/Branch.java	/^    public void setMainBank(MainBank mainBank) {$/;"	m	class:Branch
setParent	src/TrieMap/Node.java	/^    public void setParent(Node<T> parent) {$/;"	m	class:Node
setValue	src/TrieMap/Node.java	/^    public void setValue(T value) {$/;"	m	class:Node
size	src/ArrayList/ArrayList.java	/^    private int size;$/;"	f	class:ArrayList	file:
size	src/KDTree/KDTree.java	/^    private int size = 0;$/;"	f	class:KDTree	file:
size	src/Stack/Stack.java	/^    int size;$/;"	f	class:Stack
size	src/TrieMap/TrieMap.java	/^    private int size;$/;"	f	class:TrieMap	file:
state	src/Actions/AddStateRev.java	/^    private State state;$/;"	f	class:AddStateRev	file:
toString	src/Bank/Branch.java	/^    public String toString() {$/;"	m	class:Branch
toString	src/Bank/MainBank.java	/^    public String toString() {$/;"	m	class:MainBank
toString	src/KDTree/Node.java	/^    public String toString() {$/;"	m	class:Node
upRight	src/State/State.java	/^    private final int[] upRight;$/;"	f	class:State	file:
value	src/KDTree/Node.java	/^    public T value;$/;"	f	class:Node
value	src/Stack/Node.java	/^    private T value;$/;"	f	class:Node	file:
value	src/TrieMap/Node.java	/^    private T value;$/;"	f	class:Node	file:
